#!/bin/sh

# This script allows to conveniently get or upgrade setupmeta

# If you don't have setupmeta yet, you can conveniently get started with (in current folder):
#   curl -s https://raw.githubusercontent.com/zsimic/setupmeta/master/get-setupmeta | bash

# If you already have setupmeta, you can run setupmeta itself to get/upgrade (no need for this bash script):
#   ./setupmeta.py              # To get/upgrade current folder
#   ./setupmeta.py ~/foo/       # To get/upgrade folder ~/foo

TARGET=${1:-.}
if [ -z "$URL" ]; then
    URL=https://raw.githubusercontent.com/zsimic/setupmeta/master/setupmeta.py
fi

if [ ! -d $TARGET ]; then
    echo "$TARGET is not a valid directory"
    exit 1
fi

TARGET=${TARGET:-.}/setupmeta.py
TEMP_TARGET=$TARGET.tmp
COMMAND=""

if [ -L $TARGET ]; then
    echo "$TARGET is a symlink, can't upgrade"
    exit 1
fi

if [ -x "$(command -v curl)" ]; then
    COMMAND="curl --fail-early -f -s $URL"
elif [ -x "$(command -v wget)" ]; then
    COMMAND="wget -q -O- $URL"
else
    echo "You need either curl or wget installed"
    exit 1
fi

$COMMAND > $TEMP_TARGET

EXIT_CODE=$?
if [ $EXIT_CODE -ne 0 ]; then
    echo "Could not fetch $URL"
    echo "Ran: $COMMAND"
    echo "Command exited with code $EXIT_CODE"
    exit $EXIT_CODE
fi

# Sanity check what we got
VERSION=`grep "__version__ = '" $TEMP_TARGET | cut -d" " -f3 | tr -d "'"`
if [ -z "$VERSION" ]; then
    echo "Could not determine setupmeta version, please check this script and $TEMP_TARGET"
    if [ -f $TEMP_TARGET ]; then
        echo "First 10 lines from downloaded '$TEMP_TARGET':"
        echo "---"
        head -n10 $TEMP_TARGET
        echo "---"
    fi
    exit 1
fi

# Tell user whether things were upgraded or were already good
if [ -f $TARGET ]; then
    diff $TEMP_TARGET $TARGET > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "Already up to date (version $VERSION)"
    else
        cp $TEMP_TARGET $TARGET
        echo "Upgraded setupmeta to $VERSION"
    fi
else
    cp $TEMP_TARGET $TARGET
    echo "Seeded $TARGET with version $VERSION"
fi

rm $TEMP_TARGET
