[tox]
envlist = py{27,34,35,36,py,py3}, docs, style, security
minversion = 2.9.0
skip_missing_interpreters = true


[testenv]
description = General settings for testing
passenv = SSL_CERT_FILE TOXENV CI TRAVIS* APPVEYOR* CODECOV_*
deps = pytest-cov
commands = pytest {posargs:-vv --cov-config={toxinidir}/tox.ini}

[testenv:docs]
basepython = python
passenv = {[testenv]passenv}
deps = docutils
commands = python setup.py check --strict --restructuredtext

# Ran via `tox` by default, check PEP8 style with flake8 linter
[testenv:style]
basepython = python
passenv = {[testenv]passenv}
deps = flake8
commands = flake8 {posargs:src/ setup.py}

# Ran via `tox` by default, look for security issues with bandit (https://pypi.org/project/bandit/)
[testenv:security]
basepython = python
passenv = {[testenv]passenv}
deps = bandit
commands = bandit {posargs:-r examples/ setupmeta/ setup.py}


# Use `tox -e dev` for local development
[testenv:dev]
passenv = *
setenv = PYTHONDONTWRITEBYTECODE = 1
envdir = .venv
basepython = python
usedevelop = True
whitelist_externals = bash
commands = {posargs:python --version}

# Use `tox -e refreshexamples` to refresh examples' expected.txt
[testenv:refreshexamples]
setenv = PYTHONDONTWRITEBYTECODE = 1
envdir = .venv
basepython = python
skip_install = True
commands = python examples/refresh.py


[pytest]
cache_dir = .tox/pytest-cache
testpaths = tests

[flake8]
show-source = True

