[tox]
envlist = py{27,34,35,36,py,py3}, docs, style, security
minversion = 2.9.0
skip_missing_interpreters = true


[testenv]
passenv = SSL_CERT_FILE CI TRAVIS* APPVEYOR* CODECOV*
setenv = COVERAGE_FILE={toxworkdir}/.coverage.{envname}
usedevelop = True
deps = -rtests/requirements.txt
commands = pytest {posargs:-vv --cov=setupmeta/}

[testenv:coverage]
deps = coverage
skip_install = True
passenv = {[testenv]passenv}
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands = coverage combine
           coverage report
           coverage xml -o "{toxworkdir}/coverage.xml"
           coverage html -d "{toxworkdir}/htmlcov"

[testenv:codecov]
description = [only run on CI]: upload coverage data to codecov (depends on coverage running first)
passenv = {[testenv]passenv}
deps = codecov
skip_install = True
commands = codecov --file "{toxworkdir}/coverage.xml"

[testenv:docs]
basepython = python
passenv = {[testenv]passenv}
deps = docutils
commands = python setup.py check --strict --restructuredtext
           python setup.py explain -c125

[testenv:style]
basepython = python
passenv = {[testenv]passenv}
skip_install = True
deps = flake8
       flake8-import-order
commands = flake8 {posargs:examples/ setupmeta/ tests/ setup.py}

[testenv:security]
basepython = python
passenv = {[testenv]passenv}
skip_install = True
deps = bandit
commands = bandit {posargs:-r examples/ setupmeta/ setup.py}


# Use `tox -e dev` for local development
[testenv:dev]
passenv = *
setenv = PYTHONDONTWRITEBYTECODE = 1
envdir = .venv
basepython = python
usedevelop = True
whitelist_externals = bash
deps = -rtests/requirements.txt
commands = {posargs:python --version}

# Use `tox -e refreshscenarios` to refresh tests/scenarios/*/expected.txt and examples/*/expected.txt
[testenv:refreshscenarios]
setenv = PYTHONDONTWRITEBYTECODE = 1
envdir = .venv
basepython = python
commands = python tests/scenarios.py


[pytest]
cache_dir = .tox/pytest-cache
testpaths = tests

[flake8]
show-source = True
max-line-length = 160
max-complexity = 10
import-order-style = edited
application-import-names = flake8
